# to change domain:
# sed -i "s/example\.com/yourdomain.cz/g" example.com.conf

upstream web_upstream {
    server 127.0.0.1:8080 weight=5;
}

server {
    listen 80 ;
    listen [::]:80 ipv6only=on;

    server_name *.example.com;

    # uncomment after getting ssl certs
    #rewrite     ^   https://$host$request_uri? permanent;

    location /.well-known {
      alias /etc/nginx/certs/webroot/datamole.cz/.well-known;
      try_files $uri =404;
    }
}

#server {
#    listen 443 ssl http2;
#    listen [::]:443 ssl http2 ipv6only=on;
#
#    server_name *.example.com;
#
#    client_max_body_size    10m;
#    client_body_buffer_size 128k;
#
#    # Turn on OCSP stapling as recommended at 
#    # https://community.letsencrypt.org/t/integration-guide/13123 
#    # requires nginx version >= 1.3.7
#    ssl_stapling on;
#    ssl_stapling_verify on;
#
#    # Uncomment this line only after testing in browsers,
#    # as it commits you to continuing to serve your site over HTTPS
#    # in future
#    # add_header Strict-Transport-Security "max-age=31536000";
#
#    # index index.html index.htm index.nginx-debian.html;
#
#    ssl on;
#    ssl_certificate /etc/nginx/certs/example.com.pem;
#    ssl_certificate_key /etc/nginx/certs/example.com.key;
#    ssl_session_timeout 5m;
#    ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
#    ssl_ciphers ECDHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-SHA384:ECDHE-RSA-AES128-SHA256:ECDHE-RSA-AES256-SHA:ECDHE-RSA-AES128-SHA:DHE-RSA-AES256-SHA:DHE-RSA-AES128-SHA;
#    ssl_session_cache shared:SSL:10m;
#    #ssl_dhparam /path/to/server.dhparam;
#    ssl_prefer_server_ciphers on;
#
#    location /.well-known {
#      alias //etc/nginx/certs/webroot/example.com/.well-known;
#      try_files $uri =404;
#
#    }
#
#    location ~* \.(jpg|jpeg|gif|png|css|js|ico|xml)$ {
#       access_log        off;
#       log_not_found     off;
#       expires           1d;
#    }
#
#    location / {
#       proxy_http_version 1.1;
#       proxy_set_header Upgrade $http_upgrade;
#       proxy_set_header Connection 'upgrade';
#       proxy_set_header Host $host;
#       proxy_set_header X-Real-IP $remote_addr;
#       proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
#       proxy_set_header X-Forwarded-Proto $scheme;
#       proxy_cache_bypass $http_upgrade;
#       proxy_connect_timeout   90;
#       proxy_send_timeout      90;
#       proxy_read_timeout      90;
#       proxy_buffers           32 4k;
#       proxy_pass http://web_upstream;
#    }
#}
